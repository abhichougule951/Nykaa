/*
  This example requires some changes to your config:
  
  ```
  // tailwind.config.js
  module.exports = {
    // ...
    plugins: [
      // ...
      require('@tailwindcss/aspect-ratio'),
    ],
  }
  ```
*/
import { Fragment, useState } from 'react'
import { Dialog, Popover, Tab, Transition } from '@headlessui/react'
import { MenuIcon, SearchIcon, ShoppingBagIcon, XIcon as XMarkIcon, UserIcon } from '@heroicons/react/solid';

import Card from './homesectioncard/Home'
import { Link } from 'react-router-dom'



const navigation = {
  categories: [
    {
      id: 'women',
      name: 'Women',
      featured: [
        {
          name: 'Makeup',
          href: '#',
          imageSrc: 'https://images-static.nykaa.com/creatives/e57aab6a-7727-4784-b3dc-c7c92de92bf2/default.jpg?tr=w-1200,cm-pad_resize',
          imageAlt: 'Makeup Advertisement',
        },
        {
          name: 'Winter Shop',
          href: '#',
          imageSrc: 'https://images-static.nykaa.com/creatives/43c370f7-2459-476f-be57-7edc63ebb1d0/default.jpg?tr=w-1200,cm-pad_resize',
          imageAlt: 'Makeup Advertisement',
        },
      ],
      sections: [
        {
          id: 'Makeup',
          name: 'Makeup',
          items: [
            { name: 'Face', href: '#' },
            { name: 'Eyes', href: '#' },
            { name: 'Lips', href: '#' },
           
          ],
        },
        {
          id: 'Appliances',
          name: 'Appliances',
          items: [
            { name: 'Hair Styling Tools', href: '#' },
        
            { name: 'Face tools', href: '#' },
           
          ],
        },
        {
          id: 'Skin',
          name: 'Skin',
          items: [
            { name: 'Moisturizers', href: '#' },
            { name: 'Cleansers', href: '#' },
            { name: 'Masks', href: '#' },
          
          ],
        },
      ],
    },
    {
      id: 'men',
      name: 'Men',
      featured: [
        {
          name: 'TOP BRANDS',
          href: '#',
          imageSrc: 'https://images-static.nykaa.com/creatives/45bfb874-5b7d-4461-a5ba-8fb5c6358b50/default.jpg?tr=w-1200,cm-pad_resize',
          imageAlt: 'Men Advertisement',
        },
        {
          name: 'Budget Buy',
          href: '#',
          imageSrc: 'https://images-static.nykaa.com/uploads/fa3c252a-c271-46b2-8211-a8be518adc5d.jpg?tr=w-480,cm-pad_resize',
          imageAlt:'Men Advertisement.',
        },
      ],
      sections: [
        {
          id: 'clothing',
          name: 'Clothing',
          items: [
            { name: 'Skin Care', href: '#' },
           
           
            { name: 'Perfumes and Body Sprays', href: '#' },
            { name: 'Hair Care', href: '#' },
            { name: 'Bath and Body', href: '#' },
           
            { name: 'Beard Care', href: '#' },
          ],
        },
        
        {
          id: 'brands',
          name: 'Brands',
          items: [
            { name: 'USTARA', href: '#' },
            { name: 'Park Avenue', href: '#' },
            { name: 'Neutrogena', href: '#' },
            { name: 'Traya', href: '#' },
          ],
        },
      ],
    },
  ],
  pages: [
    { name: 'Company', href: '#' },
    { name: 'Stores', href: '#' },
  ],
}

function classNames(...classes) {
  return classes.filter(Boolean).join(' ')
}

export default function Navigation({onSearch}) {
  const [open, setOpen] = useState(false)
  const [searchOpen, setSearchOpen] = useState(false); 
  const [searchTerm, setSearchTerm] = useState('');
  const [cartOpen, setCartOpen] = useState(false);
  const [showLogout, setShowLogout] = useState(false);

  const username = sessionStorage.getItem('username');

  const openSearch = () => {
    setSearchOpen(true);
  };

  const closeSearch = () => {
    setSearchOpen(false);
  };

  const handleSearch = () => {
    onSearch(searchTerm);
   
   setSearchOpen(false)

  };
  const toggleCart = () => {
    setCartOpen(!cartOpen);
  };
  const renderCart = () => {
   
    return (
      <div className="fixed inset-0 z-50 overflow-hidden">
       
      </div>
    );
  };
  const handleLogout = () => {
    
    sessionStorage.removeItem('username');
    
    setShowLogout(false);
    

  };

  return (
    <div className="bg-white">
      
      
      <Transition.Root show={open} as={Fragment}>
        <Dialog as="div" className="relative z-40 lg:hidden" onClose={setOpen}>
          <Transition.Child
            as={Fragment}
            enter="transition-opacity ease-linear duration-300"
            enterFrom="opacity-0"
            enterTo="opacity-100"
            leave="transition-opacity ease-linear duration-300"
            leaveFrom="opacity-100"
            leaveTo="opacity-0"
          >
            <div className="fixed inset-0 bg-black bg-opacity-25" />
          </Transition.Child>

          <div className="fixed inset-0 z-40 flex">
            <Transition.Child
              as={Fragment}
              enter="transition ease-in-out duration-300 transform"
              enterFrom="-translate-x-full"
              enterTo="translate-x-0"
              leave="transition ease-in-out duration-300 transform"
              leaveFrom="translate-x-0"
              leaveTo="-translate-x-full"
            >
              <Dialog.Panel className="relative flex w-full max-w-xs flex-col overflow-y-auto bg-white pb-12 shadow-xl">
                <div className="flex px-4 pb-2 pt-5">
                  <button
                    type="button"
                    className="relative -m-2 inline-flex items-center justify-center rounded-md p-2 text-gray-400"
                    onClick={() => setOpen(false)}
                  >
                    <span className="absolute -inset-0.5" />
                    <span className="sr-only">Close menu</span>
                    <XMarkIcon className="h-6 w-6" aria-hidden="true" />
                  </button>
                </div>

                {/* Links */}
                <Tab.Group as="div" className="mt-2">
                  <div className="border-b border-gray-200">
                    <Tab.List className="-mb-px flex space-x-8 px-4">
                      {navigation.categories.map((category) => (
                        <Tab
                          key={category.name}
                          className={({ selected }) =>
                            classNames(
                              selected ? 'border-indigo-600 text-indigo-600' : 'border-transparent text-gray-900',
                              'flex-1 whitespace-nowrap border-b-2 px-1 py-4 text-base font-medium'
                            )
                          }
                        >
                          {category.name}
                        </Tab>
                      ))}
                    </Tab.List>
                  </div>
                  <Tab.Panels as={Fragment}>
                    {navigation.categories.map((category) => (
                      <Tab.Panel key={category.name} className="space-y-10 px-4 pb-8 pt-10">
                        <div className="grid grid-cols-2 gap-x-4">
                          {category.featured.map((item) => (
                            <div key={item.name} className="group relative text-sm">
                              <div className="aspect-h-1 aspect-w-1 overflow-hidden rounded-lg bg-gray-100 group-hover:opacity-75">
                                <img src={item.imageSrc} alt={item.imageAlt} className="object-cover object-center" />
                              </div>
                              <a href={item.href} className="mt-6 block font-medium text-gray-900">
                                <span className="absolute inset-0 z-10" aria-hidden="true" />
                                {item.name}
                              </a>
                              <p aria-hidden="true" className="mt-1">
                                Shop now
                              </p>
                            </div>
                          ))}
                        </div>
                        {category.sections.map((section) => (
                          <div key={section.name}>
                            <p id={`${category.id}-${section.id}-heading-mobile`} className="font-medium text-gray-900">
                              {section.name}
                            </p>
                            <ul
                              role="list"
                              aria-labelledby={`${category.id}-${section.id}-heading-mobile`}
                              className="mt-6 flex flex-col space-y-6"
                            >
                              {section.items.map((item) => (
                                <li key={item.name} className="flow-root">
                                  <a href={item.href} className="-m-2 block p-2 text-gray-500">
                                    {item.name}
                                  </a>
                                </li>
                              ))}
                            </ul>
                          </div>
                        ))}
                      </Tab.Panel>
                    ))}
                  </Tab.Panels>
                </Tab.Group>

                <div className="space-y-6 border-t border-gray-200 px-4 py-6">
                  {navigation.pages.map((page) => (
                    <div key={page.name} className="flow-root">
                      <a href={page.href} className="-m-2 block p-2 font-medium text-gray-900">
                        {page.name}
                      </a>
                    </div>
                  ))}
                </div>

                {/* <div className="space-y-6 border-t border-gray-200 px-4 py-6">
                  <div className="flow-root">
                    <a href="#" className="-m-2 block p-2 font-medium text-gray-900">
                      Sign in
                    </a>
                  </div>
                  <div className="flow-root">
                    <a href="#" className="-m-2 block p-2 font-medium text-gray-900">
                      Create account
                    </a>
                  </div>
                </div> */}

                {/* <div className="border-t border-gray-200 px-4 py-6">
                  <a href="#" className="-m-2 flex items-center p-2">
                    <img
                      src="https://tailwindui.com/img/flags/flag-india.svg"
                      alt=""
                      className="block h-auto w-5 flex-shrink-0"
                    />
                    <span className="ml-3 block text-base font-medium text-gray-900">India</span>
                    <span className="sr-only">, change currency</span>
                  </a>
                </div> */}
              </Dialog.Panel>
            </Transition.Child>
          </div>
        </Dialog>
      </Transition.Root>

      <header className="relative bg-white" style={{backgroundColor:'#6f42c1'}}>
        <p className="flex h-10 items-center justify-center px-4 text-sm font-medium text-white sm:px-6 lg:px-8" style={{backgroundColor:'#6f42c1'}}>
          Nykaa
        </p>

        <nav aria-label="Top" className="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
          <div className="border-b border-gray-200">
            <div className="flex h-16 items-center">
              <button
                type="button"
                className="relative rounded-md bg-white p-2 text-gray-400 lg:hidden"
                onClick={() => setOpen(true)}
              >
                <span className="absolute -inset-0.5" />
                <span className="sr-only">Open menu</span>
                <MenuIcon className="h-6 w-6" aria-hidden="true" />
              </button>

            
              <div className="ml-4 flex lg:ml-0">
                <a href="#">
                  <span className="sr-only">Your Company</span>
                  <Link to={"/"}>
                  <img
                    className="h-10 w-auto"
                    src="https://cdn.iconscout.com/icon/free/png-512/free-nykaa-3384872-2822953.png?f=webp&w=512"
                    alt=""
                  />
                  </Link>
                </a>
              </div>

              {/* Flyout menus */}
              <Popover.Group className="hidden lg:ml-8 lg:block lg:self-stretch">
                <div className="flex h-full space-x-8">
                  {navigation.categories.map((category) => (
                    <Popover key={category.name} className="flex">
                      {({ open }) => (
                        <>
                          <div className="relative flex">
                            <Popover.Button
                              className={classNames(
                                open
                                  ? 'border-indigo-600 text-indigo-600'
                                  : 'border-transparent text-gray-700 hover:text-gray-800',
                                'relative z-10 -mb-px flex items-center border-b-2 pt-px text-sm font-medium transition-colors duration-200 ease-out'
                              )}
                            >
                              {category.name}
                            </Popover.Button>
                          </div>

                          <Transition
                            as={Fragment}
                            enter="transition ease-out duration-200"
                            enterFrom="opacity-0"
                            enterTo="opacity-100"
                            leave="transition ease-in duration-150"
                            leaveFrom="opacity-100"
                            leaveTo="opacity-0"
                          >
                            <Popover.Panel className="absolute inset-x-0 top-full text-sm text-gray-500">
                             
                              <div className="absolute inset-0 top-1/2 bg-white shadow" aria-hidden="true" />

                              <div className="relative bg-white">
                                <div className="mx-auto max-w-7xl px-8">
                                  <div className="grid grid-cols-2 gap-x-8 gap-y-10 py-16">
                                    <div className="col-start-2 grid grid-cols-2 gap-x-8">
                                      {category.featured.map((item) => (
                                        <div key={item.name} className="group relative text-base sm:text-sm">
                                          <div className="aspect-h-1 aspect-w-1 overflow-hidden rounded-lg bg-gray-100 group-hover:opacity-75">
                                            <img
                                              src={item.imageSrc}
                                              alt={item.imageAlt}
                                              className="object-cover object-center"
                                            />
                                          </div>
                                          <a href={item.href} className="mt-6 block font-medium text-gray-900">
                                            <span className="absolute inset-0 z-10" aria-hidden="true" />
                                            {item.name}
                                          </a>
                                          <p aria-hidden="true" className="mt-1">
                                            Shop now
                                          </p>
                                        </div>
                                      ))}
                                    </div>
                                    <div className="row-start-1 grid grid-cols-3 gap-x-8 gap-y-10 text-sm">
                                      {category.sections.map((section) => (
                                        <div key={section.name}>
                                          <p id={`${section.name}-heading`} className="font-medium text-gray-900">
                                            {section.name}
                                          </p>
                                          <ul
                                            role="list"
                                            aria-labelledby={`${section.name}-heading`}
                                            className="mt-6 space-y-6 sm:mt-4 sm:space-y-4"
                                          >
                                            {section.items.map((item) => (
                                              <li key={item.name} className="flex">
                                                <a href={item.href} className="hover:text-gray-800">
                                                  {item.name}
                                                </a>
                                              </li>
                                            ))}
                                          </ul>
                                        </div>
                                      ))}
                                    </div>
                                  </div>
                                </div>
                              </div>
                            </Popover.Panel>
                          </Transition>
                        </>
                      )}
                    </Popover>
                  ))}

                  {navigation.pages.map((page) => (
                    <a
                      key={page.name}
                      href={page.href}
                      className="flex items-center text-sm font-medium text-gray-700 hover:text-gray-800"
                    >
                      {page.name}
                    </a>
                  ))}
                </div>
              </Popover.Group>

              <div className="ml-auto flex items-center">
                <div className="hidden lg:flex lg:flex-1 lg:items-center lg:justify-end lg:space-x-6">
                  <a href="#" className="text-sm font-medium text-gray-700 hover:text-gray-800">
                    Sign in
                  </a>
                  <span className="h-6 w-px bg-gray-200" aria-hidden="true" />
                  <a href="#" className="text-sm font-medium text-gray-700 hover:text-gray-800">
                    Create account
                  </a>
                </div>

                <div className="hidden lg:ml-8 lg:flex">
                  <a href="#" className="flex items-center text-gray-700 hover:text-gray-800">
                    <img
                      src="https://tailwindui.com/img/flags/flag-canada.svg"
                      alt=""
                      className="block h-auto w-5 flex-shrink-0"
                    />
                    <span className="ml-3 block text-sm font-medium">India</span>
                    <span className="sr-only">, change currency</span>
                  </a>
                </div>

                {/* Search */}
                <div className="bg-white">
      {/* ... */}

      <header className="relative bg-white">
        {/* ... */}

        {/* Search */}
        <div className="flex lg:ml-6 items-center">
          {/* Display the first letter of the username */}
          
<div className="relative">
  {username ? (
    
    <div className="relative group">
      <div
        className={`flex items-center justify-center text-white bg-blue-500 rounded-full p-1 mt-1 mr-2 cursor-pointer h-10 w-10 
                    hover:bg-blue-600 hover:shadow-md transition-colors`}
        onClick={() => setShowLogout(!showLogout)}
      >
        <span className="text-xs font-medium">{username.charAt(0)}</span>
      </div>
      {showLogout && (
       
        <div className="absolute top-full left-1/2 transform -translate-x-1/2 bg-white text-gray-700 py-1 px-2 rounded-md z-50">
          <button onClick={handleLogout} className="block w-full text-left hover:bg-white-800 focus:outline-none">
            Logout
          </button>
        </div>
      )}
    </div>
  ) : (
    // Sign-in button
    <Link to="/login" className="block w-full text-left hover:bg-white-800 focus:outline-none">
      Sign in
    </Link>
  )}
</div>

          <button
            onClick={openSearch}
            className="p-2 text-gray-400 hover:text-gray-500 focus:outline-none focus:ring focus:border-blue-300"
          ><span className="sr-only">Search</span>
            
            <SearchIcon className="h-6 w-6" aria-hidden="true" />
          </button>
          <Link to="/beautyadvice">
          <button className="text-xs bg-purple-700 text-white hover:bg-purple-900 focus:outline-none focus:ring focus:border-purple-300 px-2 py-1 ml-2 h-7 w-15 mt-1">
                 Beauty Advice
          </button>
          </Link>
          

        </div>

        {/* Search Bar */}
        <Transition.Root show={searchOpen} as={Fragment}>
          <Dialog as="div" className="fixed inset-0 z-50 overflow-hidden" onClose={closeSearch}>
            <div className="flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
              {/* Background overlay */}
              <Transition.Child
                as={Fragment}
                enter="ease-in-out duration-300"
                enterFrom="opacity-0"
                enterTo="opacity-100"
                leave="ease-in-out duration-300"
                leaveFrom="opacity-100"
                leaveTo="opacity-0"
              >
                <Dialog.Overlay className="fixed inset-0 bg-black bg-opacity-25" />
              </Transition.Child>

              {/* Search Bar Content */}
              <Transition.Child
                as={Fragment}
                enter="ease-in-out duration-300"
                enterFrom="opacity-0 scale-95"
                enterTo="opacity-100 scale-100"
                leave="ease-in-out duration-300"
                leaveFrom="opacity-100 scale-100"
                leaveTo="opacity-0 scale-95"
              >
                <div className="inline-block align-bottom bg-white rounded-sm text-left overflow-hidden shadow-xl transform transition-all sm:my-3 sm:align-middle sm:min-w-sm sm:w-min h-15 w-35">
  {/* Search Bar Content Goes Here */}
  <div className="p-6 flex items-center">
    <form className="flex items-center">
      <label htmlFor="search" className="sr-only">
        Search
      </label>
      <input
        type="text"
        id="search"
        name="search"
        className="block w-full border-gray-300 rounded-md p-2 mr-2"
        placeholder="Search..."
        value={searchTerm}
        style={{ width: '200px', height: '27px' }}
        onChange={(e) => setSearchTerm(e.target.value)}
      />

      <button
        onClick={(e) => {
          e.preventDefault(); // Prevent the default form submission behavior
          handleSearch();
        }}
        className="bg-pink-600 text-white font-serif py-2 px-4 text-xs hover:bg-pink-400 "
        style={{ fontSize: '10px', backgroundColor: '#f160c3', fontFamily: 'serif', marginLeft: 'auto', marginTop: '1' }}
      >
        Search
      </button>
    </form>
  </div>
</div>

              </Transition.Child>
            </div>
          </Dialog>
        </Transition.Root>
      </header>
    </div>

                {/* Cart */}
                <div className="ml-4 flow-root lg:ml-6">
                
        <Link to={"/cart"}>
          <ShoppingBagIcon
            className="h-6 w-6 flex-shrink-0 text-gray-400 group-hover:text-gray-500"
            aria-hidden="true"
          />
          </Link>
          {/* <span className="ml-2 text-sm font-medium text-gray-700 group-hover:text-gray-800"></span> */}
          <span className="sr-only">items in cart, view bag</span>
        
      </div>
      {cartOpen && renderCart()}
              </div>
            </div>
          </div>
        </nav>
      </header>
    </div>
  )
}
